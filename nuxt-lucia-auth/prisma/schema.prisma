generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model OauthAccount {
  providerId     String
  providerUserId String
  userEmail      String
  userName       String
  userAvatarURL  String
  userId         String?  @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([providerId, providerUserId])
  @@map("oauth_account")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "session_userId_fkey")

  @@index([userId], map: "Session_userId_fkey")
}

model User {
  id           String        @id
  email        String?
  password     String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  oauthAccount OauthAccount?
  session      Session[]
  profile      Profile?
}

model Profile {
  id       String @id @default(uuid())
  name     String
  imageUrl String @default("https://res.cloudinary.com/dfa1yoc1v/image/upload/v1712236337/itwzledbthxc76nzt8sw.png") @db.Text
  email    String @db.Text
  location String @db.Text
  username String @db.Text

  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  @@index([userId])
}
